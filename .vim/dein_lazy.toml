## View #####################################################################
[[plugins]] # language pack
  repo = 'sheerun/vim-polyglot'
  on_path = '.*'

[[plugins]] # display the indention levels
  repo = 'Yggdroot/indentLine'
  on_path = '.*'
  hook_source = '''
    if has('conceal')
      let g:indentLine_char='Â¦'
      let g:indentLine_color_term=239
    endif
  '''

[[plugins]] # highlight trailing whitespaces
  repo = 'bronson/vim-trailing-whitespace'
  on_path = '.*'

[[plugins]] # universal interface
  repo = 'Shougo/unite.vim'
  on_cmd = 'Unite'

[[plugins]] # text formulation
  repo = 'junegunn/vim-easy-align'
  on_map = '<Plug>(EasyAlign)'
  hook_add = '''
    vmap <Enter> <Plug>(EasyAlign)
    nmap <Leader>a <Plug>(EasyAlign)
  '''

## Editing ################################################################
## Runner # run the script
[[plugins]]
  repo = 'thinca/vim-quickrun.git'
  on_cmd = 'QuickRun'
  hook_add = '''
    let g:quickhl_config = {'_': {'split': 'vertical'}}
    nnoremap <leader>r :QuickRun<CR>
  '''


[[plugins]] # intensely orgasmic commenting
  repo = 'scrooloose/nerdcommenter'
  on_map = '<Plug>NERDCommenterToggle'
  hook_add = '''
    let g:NERDSpaceDelims=1
    let g:NERDShutUp=1
    nmap <Leader>n <Plug>NERDCommenterToggle
    vmap <Leader>n <Plug>NERDCommenterToggle
  '''

## Filer ###################################################################
[[plugins]] # Fuzzy file, buffer, mru, tag, etc finder
  repo = 'ctrlpvim/ctrlp.vim'
  depends = ['ctrlp-funky', 'vim-ctrlp-commandline']
  hook_add = '''
    nnoremap <Leader>c :CtrlP<CR>
    let g:netrw_bufsettings='noma nomod nu nobl nowrap ro'
    let g:netrw_liststyle=3
    let g:netrw_list_hide='^\._.*$,^\.DS_Store$,^\.git/$'
  '''
  hook_source = 'call dein_hook#ctrlp#source()'


[[plugins]] # function navigator for CtrlP
  repo = 'tacahiroy/ctrlp-funky'

[[plugins]] # command line history navigation for CtrlP
  repo = 'suy/vim-ctrlp-commandline'

## Auto-Completion ##########################################################
[[plugins]] # famous completion tool
  repo = 'Shougo/neocomplete'
    if = 'has("lua")'
        on_path = '.*'
          hook_source = 'call dein_hook#neocomplete#source()'

[[plugins]] # auto close parenthes
  repo = 'Townk/vim-autoclose'
  on_path = '.*'

[[plugins]] # auto parenthes and repeat
  repo = 'cohama/lexima.vim'
  on_path = '.*'

[[plugins]] # not indention when paste
  repo = 'ConradIrwin/vim-bracketed-paste'
  on_path = '.*'

## Git #######################################################################
[[plugins]] # git wrapper
  repo = 'tpope/vim-fugitive'
  on_cmd = ['Gstatus', 'Gcommit', 'Gwrite', 'Git', 'Git!',
            'Gcd', 'Glcd', 'Ggrep', 'Glog']

[[plugins]] # shows a git diff in the 'gutter'
  repo = 'airblade/vim-gitgutter'
  on_path = '.*'

[[plugins]] # pleasant editing on commit messages
  repo = 'rhysd/committia.vim'
  on_path = '.*/COMMIT_EDITMSG'

## Snippet ###################################################################
[[plugins]]
  repo = 'Shougo/neosnippet'
  on_path = '.*'
  depends = 'neosnippet-snippets'
  hook_source = 'call dein_hook#neosnippet#source()'

[[plugins]]
  repo = 'Shougo/neosnippet-snippets'

## Languages #################################################################
### C/C++
[[plugins]]
  repo = 'osyo-manga/vim-marching'
  on_ft = ['cpp', 'c']
  hook_add = '''
    let g:marching_clang_command='clang'
    let g:marching_include_paths=['/usr/include/c++', '/usr/local/include/c++']
    let g:marching_enable_neocomplete=1
  '''

### Python
[[plugins]]
  repo = 'davidhalter/jedi-vim'
  on_ft = 'python'
  hook_add = '''
    let g:jedi#completions_enabled = 1
    let g:jedi#auto_vim_configuration = 0
  '''
### HTML
[[plugins]]
  repo = 'lilydjwg/colorizer'
  on_ft = 'html'

[[plugins]]
  repo = 'vim-scripts/HTML-AutoCloseTag'
  on_ft = 'html'

[[plugins]]
  repo = 'mutewinter/vim-markdown'
  on_ft = 'markdown'

### Colorscheme ###############################################################
[[plugins]]
  repo = 'joshdick/onedark.vim'
  hook_add = '''
    let g:onedark_termcolors=16
  '''

